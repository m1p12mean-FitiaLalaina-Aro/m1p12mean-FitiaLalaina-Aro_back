const mongoose = require("mongoose");
const dotenv = require("dotenv");
const Permission = require("./models/Permission");
const RolePermission = require("./models/RolePermission");

dotenv.config();
mongoose.connect(process.env.MONGO_URI);

const seedRoles = async () => {
  try {
    await RolePermission.deleteMany({});

    // R√©cup√©rer les permissions existantes
    const p1 = await Permission.findOne({ name: "create_product" });
    const p2 = await Permission.findOne({ name: "edit_product" });
    const p3 = await Permission.findOne({ name: "delete_product" });

    // V√©rifier que les permissions existent avant d'ins√©rer
    if (!p1 || !p2 || !p3) {
      console.error("‚ùå Les permissions ne sont pas encore cr√©√©es ! Ex√©cutez d'abord `seed.js`.");
      process.exit(1);
    }

    // Ins√©rer les permissions des r√¥les
    await RolePermission.insertMany([
      { role: "user", permissions: [p1._id] },
      { role: "manager", permissions: [p1._id, p2._id, p3._id] }
    ]);

    console.log("üöÄ R√¥les et permissions initialis√©s !");
    process.exit();
  } catch (error) {
    console.error("‚ùå Erreur lors de l'insertion :", error);
    process.exit(1);
  }
};

seedRoles();
